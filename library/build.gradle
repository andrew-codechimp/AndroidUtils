apply plugin: 'com.android.library'
apply plugin: 'android-maven'

android {
    compileSdkVersion 22
    buildToolsVersion "22.0.1"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 22
        versionCode 8
        versionName "1.8"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
}

// build a jar with source files
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

//android.libraryVariants.all { variant ->
//
//    task("generate${variant.name}Javadoc", type: Javadoc) {
//        title = "$name $version API"
//        description "Generates Javadoc for $variant.name."
//        source = variant.javaCompile.source
//        ext.androidJar =
//                "${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"
//        classpath = files(variant.javaCompile.classpath.files) + files(ext.androidJar)
//        options.links("http://docs.oracle.com/javase/7/docs/api/");
//        options.links("http://d.android.com/reference/");
//        exclude '**/BuildConfig.java'
//        exclude '**/R.java'
//    }
//}


task javadocs(type: Javadoc) {
    options {
        linksOffline "http://d.android.com/reference", "${android.sdkDirectory}/docs/reference"
    }
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(project.android.getBootClasspath().join(File.pathSeparator))
}

task javadocsJar(type: Jar, dependsOn: javadocs) {
    classifier = 'javadoc'
    //basename = artifact_id
    from javadocs.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocsJar
}